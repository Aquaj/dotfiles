" Convenience mappings
"---------------------

" More natural line movements
nmap j gj
nmap k gk

" Easy escape
imap jk <ESC>
imap kj <ESC>

" Escape and save
imap :w<ENTER> <ESC>:w<CR>

" Remap C-k as it's taken by tmux and navigation
imap C-g C-k

" Easily move between panes
nmap C-j C-w j
nmap C-h C-w h
nmap C-k C-w k
nmap C-l C-w l

" More natural splitting
set splitbelow
set splitright

" Quick edit and sourcing of vimrc
nmap <leader>vrc :sp $MYVIMRC<CR>
nmap <leader>so :source $MYVIMRC<CR>

" Switch between last two files easily
nnoremap <leader><leader> <C-^>

" Remove trailing whitespaces
autocmd BufWritePre * %s/\s\+$//e

" Enable % switching from opening to closing
runtime macros/matchit.vim

" Persistent Undo
if has('persistent_undo')      "check if your vim version supports it
  set undofile                 "turn on the feature
  set undodir=$HOME/.vim/undo  "directory where the undo files will be stored
endif

" Create directories if not exist on file creation
if !exists('*s:MkNonExDir')
  function s:MkNonExDir(file, buf)
      if empty(getbufvar(a:buf, '&buftype')) && a:file!~#'\v^\w+\:\/'
          let dir=fnamemodify(a:file, ':h')
          if !isdirectory(dir)
              call mkdir(dir, 'p')
          endif
      endif
  endfunction

  augroup BWCCreateDir
      autocmd!
      autocmd BufWritePre * :call s:MkNonExDir(expand('<afile>'), +expand('<abuf>'))
  augroup END
end

" Shows the diff between a buffer and the file on disk
function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

" vim:ft=vim
